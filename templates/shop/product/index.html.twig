{% extends 'base.html.twig' %}

{% block title %}Hello ProductController!{% endblock %}

{% block body %}


<div class="example-wrapper">
    <a href="{{ path('app_shop_cart') }}">Voir mon panier</a>
    <h1>Catalogue</h1>
    {# Filtre de prix #}
    <form method="GET" id="price-filter-form">
        <label for="min-price">Prix minimum :</label>
        <input type="number" name="min" id="min-price" value="{{ app.request.get('min') ?? 0 }}" min="0">

        <label for="max-price">Prix maximum :</label>
        <input type="number" name="max" id="max-price" value="{{ app.request.get('max') ?? 150 }}" min="0">

        <button type="submit">Filtrer</button>
    </form>

    {# Barre de recherche #}
    <div class="search-container">
        <input type="text" id="search" class="search-input" placeholder="Rechercher un produit...">
    </div>

    <div id="product-list" class="product-grid">
        {% for product in products %}
            <a href="{{ path('app_product_show', {'id': product.id}) }}">
            <div class="product-card">
                <img src="{{  asset(product.imgId.url) }}" alt="{{ product.name }}" class="product-image">
                <h3 class="product-name">{{ product.name }}</h3>
            </div>
          </a>
        {% endfor %}
    </div>


    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const searchInput = document.getElementById('search');
            const products = document.querySelectorAll('.product-card');

            searchInput.addEventListener('input', function() { //À chaque fois que l’utilisateur tape (ou efface) un caractère dans le champ de recherche, la fonction se déclenche.
                const query = this.value.toLowerCase(); //récupère le texte saisi dans l’input et met tout en minuscules pour éviter les problèmes de casse
                products.forEach(card => { //Pour chaque carte produit :
                    const name = card.querySelector('.product-name').textContent.toLowerCase(); //On récupère son nom (élément avec .product-name).
                    card.style.display = name.includes(query) ? 'block' : 'none';
                    //On compare ce nom avec la recherche (query).
                    // Si le nom contient la recherche → la carte reste visible (display = 'block').
                    // Sinon elle est cachée (display = 'none').
                });
            });
        });
    </script>



    <style>
        /* Styles simples pour les cartes et la barre de recherche */
        .search-container {
            margin-bottom: 20px;
            text-align: center;
        }
        .search-input {
            width: 50%;
            padding: 10px;
            font-size: 16px;
            border-radius: 8px;
            border: 1px solid #ccc;
        }

        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
            gap: 20px;
        }

        .product-card {
            border: 1px solid #eee;
            border-radius: 10px;
            padding: 10px;
            text-align: center;
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .product-image {
            max-width: 100%;
            height: auto;
            border-radius: 8px;
        }

        .product-name {
            margin: 10px 0 5px;
            font-size: 16px;
        }

        .product-price {
            color: #333;
            font-weight: bold;
        }

        a {
            display: block;
            text-decoration: none;
            color: inherit; /* garde la couleur du texte */
        }
    </style>


</div>
{% endblock %}
